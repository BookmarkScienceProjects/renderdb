// Available variables which can be used inside of strings.
// ${workspaceRoot}: the root folder of the team
// ${file}: the current opened file
// ${fileBasename}: the current opened file's basename
// ${fileDirname}: the current opened file's dirname
// ${fileExtname}: the current opened file's extension
// ${cwd}: the current working directory of the spawned process
{
 
	"command": "sh",
    "args": ["-c"],
	"isShellCommand": true,

    "tasks": [
        // Build task
        {
            "taskName":"go build -v && echo Done!",
            "isBuildCommand": true,
            "isTestCommand": false,
            "problemMatcher": {
  		      "owner": "go",
		      // The file name for reported problems is relative to the current working directory.
		      "fileLocation": ["relative", "${cwd}"],
			  // The actual pattern to match problems in the output.
		      "pattern": {
			     "regexp": "^(.+)\\:(\\d+)\\:(.+)$",
			     "file": 1,
			     "location":2,
			     "message": 3	
		      }
            }
        },
        // Test task
        {
            "taskName":"go test $(glide novendor) -cover",
            "isBuildCommand": false,
            "isTestCommand": true,
            "args": ["-v", "$(glide novendor)"],
            
            "problemMatcher": {
		      "owner": "go",
		      // The file name for reported problems is relative to the current working directory.
		      "fileLocation": ["relative", "${cwd}"],
			  // The actual pattern to match problems in the output.
		      "pattern": {
			     "regexp": "^(.+)\\:(\\d+)\\:(.+)$",
			     "file": 1,
			     "location": 2,
			     "message": 3
		      }
            }
        }
    ]
}
